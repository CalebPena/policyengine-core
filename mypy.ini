[mypy]
; See https://mypy.readthedocs.io/en/stable/config_file.html#config-file-format

; We have to ignore the following errors because we depend on several libraries that don't have type annotations.
ignore_missing_imports = True

; Ignore code that we haven't fixed yet. This allows us to detect regressions with files that are already compatible,
; and prevents new files from adding mypy errors. Eventually, this list should be empty. See this issue for progress
; updates: https://github.com/PolicyEngine/policyengine-core/issues/3
; This initial list was generated using the following bash command:
;   mypy policyengine_core tests | grep error: | sed 's/:.*//; s/\./\\./;' | uniq | sort | sed 's/^/    | /'
;      <mypy all of our code>     <find errors>     <extract unique file names>   <sort and convert to regex>
exclude = (?x)
    ( $^
    | policyengine_core/commons/formulas\.py
    | policyengine_core/country_template/data/datasets/country_template_dataset\.py
    | policyengine_core/data/dataset\.py
    | policyengine_core/data/private_dataset\.py
    | policyengine_core/data/public_dataset\.py
    | policyengine_core/data_storage/in_memory_storage\.py
    | policyengine_core/data_storage/on_disk_storage\.py
    | policyengine_core/entities/entity\.py
    | policyengine_core/entities/group_entity\.py
    | policyengine_core/entities/helpers\.py
    | policyengine_core/enums/enum\.py
    | policyengine_core/enums/enum_array\.py
    | policyengine_core/errors/situation_parsing_error\.py
    | policyengine_core/experimental/memory_config\.py
    | policyengine_core/holders/holder\.py
    | policyengine_core/parameters/at_instant_like\.py
    | policyengine_core/parameters/config\.py
    | policyengine_core/parameters/parameter_at_instant\.py
    | policyengine_core/periods/period_\.py
    | policyengine_core/projectors/entity_to_person_projector\.py
    | policyengine_core/projectors/first_person_to_entity_projector\.py
    | policyengine_core/projectors/projector\.py
    | policyengine_core/scripts/run_data\.py
    | policyengine_core/simulations/individual_sim\.py
    | policyengine_core/simulations/microsimulation\.py
    | policyengine_core/simulations/simulation\.py
    | policyengine_core/simulations/simulation_builder\.py
    | policyengine_core/taxbenefitsystems/tax_benefit_system\.py
    | policyengine_core/tools/__init__\.py
    | policyengine_core/tools/test_runner\.py
    | policyengine_core/types/data_types/arrays\.py
    | policyengine_core/variables/defined_for\.py
    | policyengine_core/variables/helpers\.py
    | policyengine_core/variables/variable\.py
    | tests/core/commons/test_formulas\.py
    | tests/core/parameter_validation/test_parameter_validation\.py
    | tests/core/parameters_fancy_indexing/test_fancy_indexing\.py
    | tests/core/tax_scales/test_abstract_rate_tax_scale\.py
    | tests/core/tax_scales/test_abstract_tax_scale\.py
    | tests/core/tax_scales/test_linear_average_rate_tax_scale\.py
    | tests/core/tax_scales/test_marginal_amount_tax_scale\.py
    | tests/core/tax_scales/test_marginal_rate_tax_scale\.py
    | tests/core/tax_scales/test_single_amount_tax_scale\.py
    | tests/core/tax_scales/test_tax_scales_commons\.py
    | tests/core/test_axes\.py
    | tests/core/test_calculate_output\.py
    | tests/core/test_countries\.py
    | tests/core/test_cycles\.py
    | tests/core/test_extensions\.py
    | tests/core/test_formulas\.py
    | tests/core/test_holders\.py
    | tests/core/test_opt_out_cache\.py
    | tests/core/test_parameters\.py
    | tests/core/test_periods\.py
    | tests/core/test_reforms\.py
    | tests/core/test_simulation_builder\.py
    | tests/core/test_tracers\.py
    | tests/core/test_yaml\.py
    | tests/core/tools/test_runner/test_yaml_runner\.py
    | tests/core/variables/test_annualize\.py
    | tests/core/variables/test_variables\.py
    | tests/fixtures/appclient\.py
    | tests/fixtures/entities\.py
    | tests/fixtures/simulations\.py
    | tests/fixtures/taxbenefitsystems\.py
    | policyengine_core/country_template/__init__\.py
    | policyengine_core/country_template/reforms/add_new_tax\.py
    | policyengine_core/country_template/variables/benefits\.py
    | policyengine_core/country_template/variables/demographics\.py
    | policyengine_core/country_template/variables/housing\.py
    | policyengine_core/country_template/variables/ids\.py
    | policyengine_core/country_template/variables/income\.py
    | policyengine_core/country_template/variables/stats\.py
    | policyengine_core/country_template/variables/taxes\.py
    | policyengine_core/extension_template/local_benefit\.py
    | policyengine_core/parameters/operations/get_parameter\.py
    | policyengine_core/parameters/operations/homogenize_parameters\.py
    | policyengine_core/parameters/operations/interpolate_parameters\.py
    | policyengine_core/parameters/operations/uprate_parameters\.py
    | policyengine_core/parameters/parameter\.py
    | policyengine_core/parameters/parameter_node\.py
    | policyengine_core/parameters/parameter_node_at_instant\.py
    | policyengine_core/parameters/parameter_scale\.py
    | policyengine_core/parameters/parameter_scale_bracket\.py
    | policyengine_core/parameters/vectorial_parameter_node_at_instant\.py
    | policyengine_core/populations/group_population\.py
    | policyengine_core/populations/population\.py
    | policyengine_core/reforms/reform\.py
    | policyengine_core/taxscales/helpers\.py
    | tests/core/test_entities\.py
    | policyengine_core/tracers/tracing_parameter_node_at_instant\.py
    | tests/fixtures/variables\.py
    )
